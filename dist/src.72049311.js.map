{"version":3,"sources":["src/index.js"],"names":["amountOfLarge","amountOfSmall","welcomeScreen","document","querySelector","largeRange","smallRange","largeRangeValueOutput","smallRangeValueOutput","numbersList","targetNumberOutput","proceedWelcomeBTN","showTargetBTN","reloadBTN","largeNumArray","smallNumArray","finalArray","largeSliderChange","value","textContent","smallSliderChange","addEventListener","combineArrays","i","push","Math","floor","random","length","shuffle","array","currentIndex","temporaryValue","randomIndex","outputFinalArray","item","createElement","itemProp","createAttribute","setAttributeNode","appendChild","createTextNode","resetNumberArrayOutput","resetList","querySelectorAll","parentNode","removeChild","randomTargetNumber","randomNumber","createList","Number","style","display"],"mappings":";AAEA,IAyBIA,EACAC,EA1BAC,EAAgBC,SAASC,cAAc,kBAGvCC,EAAaF,SAASC,cAAc,qBACpCE,EAAaH,SAASC,cAAc,qBAGpCG,EAAwBJ,SAASC,cAAc,uBAC/CI,EAAwBL,SAASC,cAAc,uBAG/CK,EAAcN,SAASC,cAAc,gBAGrCM,EAAqBP,SAASC,cAAc,iBAG5CO,EAAoBR,SAASC,cAAc,gBAC3CQ,EAAgBT,SAASC,cAAc,yBACvCS,EAAYV,SAASC,cAAc,eAGjCU,EAAgB,CAAC,GAAI,GAAI,GAAI,KAC7BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAK9CC,EAAa,GAEbC,EAAoB,WACvBX,EAAWY,MAAQ,EAAIb,EAAWa,MAClCX,EAAsBY,YAAcd,EAAWa,MAC/CV,EAAsBW,YAAcb,EAAWY,OAG5CE,EAAoB,WACvBf,EAAWa,MAAQ,EAAIZ,EAAWY,MAClCV,EAAsBW,YAAcb,EAAWY,MAC/CX,EAAsBY,YAAcd,EAAWa,OAGhDb,EAAWgB,iBAAiB,QAASJ,GACrCX,EAAWe,iBAAiB,QAASD,GAErC,IAAIE,EAAgB,WACd,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAesB,IAClCP,EAAWQ,KACVT,EAAcU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAca,UAIpD,IAAA,IAAIL,EAAI,EAAGA,EAAIvB,EAAeuB,IAClCP,EAAWQ,KACVV,EAAcW,KAAKC,MAAMD,KAAKE,SAAWb,EAAcc,UAIlDZ,OAAAA,GAGJa,EAAU,SAAAC,GAMN,IALHC,IACHC,EACAC,EAFGF,EAAeD,EAAMF,OAKlB,IAAMG,GAEZE,EAAcR,KAAKC,MAAMD,KAAKE,SAAWI,GAIzCC,EAAiBF,EAHjBC,GAAgB,GAIhBD,EAAMC,GAAgBD,EAAMG,GAC5BH,EAAMG,GAAeD,EAGfF,OAAAA,GAGJI,EAAmB,SAAAJ,GACjB,IAAA,IAAIP,EAAI,EAAGA,EAAIO,EAAMF,OAAQL,IAAK,CAClCY,IAAAA,EAAOhC,SAASiC,cAAc,OAC9BC,EAAWlC,SAASmC,gBAAgB,SAExCD,EAASnB,MAAQ,WACjBiB,EAAKI,iBAAiBF,GAEtBF,EAAKK,YAAYrC,SAASsC,eAAeX,EAAMP,KAC/Cd,EAAY+B,YAAYL,GAGlB1B,OAAAA,GAGJiC,EAAyB,WAEvB,IADCC,IAAAA,EAAYxC,SAASyC,iBAAiB,oBACnCrB,EAAI,EAAGA,EAAIoB,EAAUf,OAAQL,IACrCoB,EAAUpB,GAAGsB,WAAWC,YAAYH,EAAUpB,KAI5CwB,EAAqB,WACpBC,IAAAA,EAAevB,KAAKC,OAAuB,IAAjBD,KAAKE,SAAyB,KAC5DjB,EAAmBS,YAAc6B,GAG9BC,EAAa,WAChBjD,EAAgBkD,OAAO7C,EAAWa,OAClCjB,EAAgBiD,OAAO5C,EAAWY,OAClCI,IACAN,EAAaa,EAAQb,GACrBkB,EAAiBlB,IAGlBL,EAAkBU,iBAAiB,QAAS,WAE3CqB,IACA1B,EAAa,GACbd,EAAciD,MAAMC,QAAU,OAC9BH,MAGDpC,EAAUQ,iBAAiB,QAAS,WACnCqB,IACAxC,EAAciD,MAAMC,QAAU,QAC9B1C,EAAmByC,MAAMC,QAAU,OACnCxC,EAAcuC,MAAMC,QAAU,QAC9BpC,EAAa,KAGdJ,EAAcS,iBAAiB,QAAS,WACvC0B,IACAnC,EAAcuC,MAAMC,QAAU,OAC9B1C,EAAmByC,MAAMC,QAAU","file":"src.72049311.js","sourceRoot":"..","sourcesContent":["// DOM Objects\n// Screens\nlet welcomeScreen = document.querySelector('.welcomeScreen');\n\n// Small and large range\nlet largeRange = document.querySelector('.largeNumberRange');\nlet smallRange = document.querySelector('.smallNumberRange');\n\n// Small and large range output\nlet largeRangeValueOutput = document.querySelector('.largeNumbersOutput');\nlet smallRangeValueOutput = document.querySelector('.smallNumbersOutput');\n\n// Output for final number array\nlet numbersList = document.querySelector('.numbersList');\n\n// Target number output\nlet targetNumberOutput = document.querySelector('.targetNumber');\n\n// Buttons\nlet proceedWelcomeBTN = document.querySelector('.proceed_BTN');\nlet showTargetBTN = document.querySelector('.showTargetNumber_BTN');\nlet reloadBTN = document.querySelector('.reload_BTN');\n\n// Javascript variables\nconst largeNumArray = [25, 50, 75, 100];\nconst smallNumArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nlet amountOfLarge;\nlet amountOfSmall;\n\nlet finalArray = [];\n\nlet largeSliderChange = () => {\n\tsmallRange.value = 6 - largeRange.value;\n\tlargeRangeValueOutput.textContent = largeRange.value;\n\tsmallRangeValueOutput.textContent = smallRange.value;\n};\n\nlet smallSliderChange = () => {\n\tlargeRange.value = 6 - smallRange.value;\n\tsmallRangeValueOutput.textContent = smallRange.value;\n\tlargeRangeValueOutput.textContent = largeRange.value;\n};\n\nlargeRange.addEventListener('input', largeSliderChange);\nsmallRange.addEventListener('input', smallSliderChange);\n\nlet combineArrays = () => {\n\tfor (let i = 0; i < amountOfSmall; i++) {\n\t\tfinalArray.push(\n\t\t\tsmallNumArray[Math.floor(Math.random() * smallNumArray.length)]\n\t\t);\n\t}\n\n\tfor (let i = 0; i < amountOfLarge; i++) {\n\t\tfinalArray.push(\n\t\t\tlargeNumArray[Math.floor(Math.random() * largeNumArray.length)]\n\t\t);\n\t}\n\n\treturn finalArray;\n};\n\nlet shuffle = array => {\n\tlet currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n};\n\nlet outputFinalArray = array => {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tlet item = document.createElement('div');\n\t\tlet itemProp = document.createAttribute('class');\n\n\t\titemProp.value = 'listItem';\n\t\titem.setAttributeNode(itemProp);\n\n\t\titem.appendChild(document.createTextNode(array[i]));\n\t\tnumbersList.appendChild(item);\n\t}\n\n\treturn numbersList;\n};\n\nlet resetNumberArrayOutput = () => {\n\tconst resetList = document.querySelectorAll('.numbersList div');\n\tfor (let i = 0; i < resetList.length; i++) {\n\t\tresetList[i].parentNode.removeChild(resetList[i]);\n\t}\n};\n\nlet randomTargetNumber = () => {\n\tlet randomNumber = Math.floor(Math.random() * (100 - 999) + 999);\n\ttargetNumberOutput.textContent = randomNumber;\n};\n\nlet createList = () => {\n\tamountOfLarge = Number(largeRange.value);\n\tamountOfSmall = Number(smallRange.value);\n\tcombineArrays();\n\tfinalArray = shuffle(finalArray);\n\toutputFinalArray(finalArray);\n};\n\nproceedWelcomeBTN.addEventListener('click', () => {\n\t// For debugging\n\tresetNumberArrayOutput();\n\tfinalArray = [];\n\twelcomeScreen.style.display = 'none';\n\tcreateList();\n});\n\nreloadBTN.addEventListener('click', () => {\n\tresetNumberArrayOutput();\n\twelcomeScreen.style.display = 'block';\n\ttargetNumberOutput.style.display = 'none';\n\tshowTargetBTN.style.display = 'block';\n\tfinalArray = [];\n});\n\nshowTargetBTN.addEventListener('click', () => {\n\trandomTargetNumber();\n\tshowTargetBTN.style.display = 'none';\n\ttargetNumberOutput.style.display = 'block';\n});\n"]}